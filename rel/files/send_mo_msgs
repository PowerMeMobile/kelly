#!/bin/bash

UrlFmt="http://{{HOST}}:{{PORT}}/inject_mo?short_message={{TEXT}}&source_addr={{NETWORK}}{{NUMBER}}&destination_addr={{DST_ADDR}}&source_addr_ton=1&source_addr_npi=0&dest_addr_ton=1&dest_addr_npi=1"
Host=localhost
Port=8071
Count=0
Same=0
DstAddr=375296660001 # Should be one from Addr2Cust
Networks=(37529 37533 37544 37525)

function usage() {
   echo "Usage: $(basename $0) <-c Count> [-b Body] [-s] [-d Dst Address] [-H Host] [-P Port]"
   echo "Where -c Message Count. Mandatory option"
   echo "      -b Message Boby. By default message body is randomly generated"
   echo "      -s Same randomly generated text for all messages"
   echo "      -d Destination address. Default is '$DstAddr'"
   echo "      -H SMPPSim's Host name. Default is '$Host'"
   echo "      -P SMPPSim's Port number. Default is '$Port'"
   echo "      -q Quiet mode"
   echo "      -h Help"
}

# generate random 100 chars sequence.
function generate_random_text() {
	cat /dev/urandom | tr -dc '0-9a-zA-Z' | head -c 100
}

# parse arguments.
while getopts c:b:sd:H:P:qh opt; do
    case "$opt" in
		c) Count="$OPTARG";;
		b) Text="$OPTARG"; Same=1;;
		s) Same=1;;
		d) DstAddr=$"$OPTARG";;
		H) Host="$OPTARG";;
		P) Port="$OPTARG";;
		q) Quiet="-q";;
		\? | h) usage; exit 0;
    esac
done

# check that the mandatory option is set.
if [ $Count -eq 0 ]; then
	usage
	exit 1
fi

# generate random text message used for all messages.
if [ $Same -eq 1 ] && [ -z "$Text" ]; then
	Text=$(generate_random_text)
fi

Index=1
LastNetworkIndex=$((${#Networks[@]}-1))
while [ $Index -lt $Count -o $Index -eq $Count ]; do
	if [ -z $Quiet ]; then
		printf "#%s\n" $Index
	fi

	## select random network.
	RandomNetworkIndex=$(shuf -i 0-$LastNetworkIndex -n 1)
	Network=${Networks[$RandomNetworkIndex]}
	## select random 7 digits number.
	Number=$(shuf -i 1111111-9999999 -n 1)
	## if not the same message, then generate it every time.
	if [ $Same -eq 0 ]; then
		Text=$(generate_random_text)
	fi
	## build sed patterns list.
	Patterns="s/{{HOST}}/$Host/;s/{{PORT}}/$Port/;s/{{TEXT}}/$Text/;s/{{NETWORK}}/$Network/;s/{{NUMBER}}/$Number/;s/{{DST_ADDR}}/$DstAddr/"
	## build the url.
	Url=$(echo $UrlFmt | sed -e $Patterns)
	wget $Url $Quiet -O /dev/null
	if [ -z $Quiet ]; then
		echo; echo
	fi

	Index=$(($Index + 1))
done

exit 0
